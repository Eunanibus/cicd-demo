steps:
  - name: 'gcr.io/cloud-builders/npm'
    id: 'Install dependencies'
    args: ['install']

  - name: 'gcr.io/cloud-builders/npm'
    id: 'Lint'
    args: ['run', 'lint']

  - name: 'gcr.io/cloud-builders/npm'
    id: 'Test'
    env:
      - 'CI=true'
    args: ['run', 'test', '--watchAll=false']

  - name: 'gcr.io/cloud-builders/npm'
    id: 'Build'
    args: ['run', 'build']
    env:
      - 'BUILD_ID=$BUILD_ID'

  # Build snapshot images and push them to Cloud Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build deployable image (commit tag)'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/cicd_demo:$SHORT_SHA', '.']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push deployable image (commit tag)'
    args: ['push', 'gcr.io/$PROJECT_ID/cicd_demo:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build deployable image (latest tag)'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/cicd_demo:latest', '.']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push deployable image (latest tag)'
    args: ['push', 'gcr.io/$PROJECT_ID/cicd_demo:latest']

  # Patch a new Ingress ressource for the build $SHORT_SHA

  - name: 'google/cloud-sdk:slim'
    id: 'Generate a new Ingress Ressource, Service and Deployment'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        perl -pe "s/_SHORT_SHA_/$SHORT_SHA/g" scripts/cloudbuild/cicd_demo.template.yaml > cicd_demo.$SHORT_SHA.yaml
  # Apply a new Ingress ressource for the build $SHORT_SHA

  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'Apply Kubectl configuration'
    args:
      - 'apply'
      - '-f'
      - 'cicd_demo.$SHORT_SHA.yaml'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=cicd-demo-cluster'

images:
  - 'gcr.io/$PROJECT_ID/cicd_demo:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/cicd_demo:latest'